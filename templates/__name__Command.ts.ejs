import { Command } from '@athenna/artisan'
import { Container } from 'Providers/Container'
import { Command as Commander } from 'commander'

export class <%= namePascal %>Command extends Command {
    /**
    * Use the constructor to resolve any dependency of the Ioc container
    *
    * @param container
    * @return <%= namePascal %>Command
    */
    public constructor(_container: Container) {
      super()
    }

    /**
    * The name and signature of the console command.
    */
    protected signature = 'your:command <yourArgument>'

    /**
    * The console command description.
    */
    protected description = 'Your command description.'

    /**
    * Set additional flags in the commander instance.
    * This method is executed when registering your command.
    *
    * @return {void}
    */
    public addFlags(commander: Commander): Commander {
      return commander
    }

    /**
    * Execute the console command.
    *
    * @return {Promise<void>}
    */
    async handle(_yourArgument: string, _options: any): Promise<void> {
      //
    }
}
